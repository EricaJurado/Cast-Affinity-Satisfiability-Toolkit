#const facet_high_level=2.
#const facet_low_level=5.
%#const high=1.
%#const neutral=0.
%#const low=-1.
%% Generation, non-instance domains

facet(1..10).

facet_status(high).
facet_status(neutral).
facet_status(low).

%% Generate/Assign

%every human get an facet value
1{facet_level(H,X) : facet(X)}1:- human(H).

%every pair of humans gets a extroversion similarity level
1{facet_sim(A,B,X) : facet_status(X)}1:- human(A), human(B), A!=B.

%% Integrity constraints

% high facet_sim if facet difference is within some bound
:-facet_sim(A,B,high), human(A), human(B), A != B, 
		facet_level(A,X), facet_level(B,Y),
		facet(X), facet(Y), |X-Y| > facet_high_level.

% low facet_sim if facet difference is beyond some bound
:-facet_sim(A,B,low), human(A), human(B), A != B, 
		facet_level(A,X), facet_level(B,Y),
		facet(X), facet(Y), |X-Y| < facet_low_level.

% neutral facet_sim if not similar or opposite 
:-facet_sim(A,B,neutral), human(A), human(B), A != B, 
		facet_level(A,X), facet_level(B,Y),
		facet(X), facet(Y), |X-Y| <= facet_high_level.

:-facet_sim(A,B,neutral), human(A), human(B), A != B, 
		facet_level(A,X), facet_level(B,Y),
		facet(X), facet(Y), |X-Y| >= facet_low_level.


